Dependencies on M2M

Changes to be made for other projects
All package names
All Spring configuration files
Common:
- uk.co.kayratech.m2m.platform.common.exceptions M2MBusinessException
Model:
- M2mModelBaseTest class
- All table names for domain model objects under model package
Dao:
- jpaConfiguration.xml persistenceUnitName
- persistence.xml persistence-unit
- M2M_VERSION table in CreateData.sql as it has no corresponding domain model object
- Insert statements in InsertData.sql
- M2mDaoBaseIntegrationTest class
TxLogic
- M2mTxLogicBaseIntegrationTest class


Things to describe in documentation
Eclipse Setup:
- Ensuring conf folder is in build path
- Plugins required
- Plugin setups
	- FileSync to sync files from all_resources/*/local folder to destinations:
	In M2mCommon
		- Message files from i18n/local to conf/i18n
		- Spring files from spring/local to META-INF/spring
	In M2mDao
		- Spring xml files in spring/local folder to META-INF/spring
		- persistence/local/persistence.xml to META-INF
		- application.properties and logback.xml under properties/local to conf
		

Common:
- General description
- i18n
- Context
- Exception objects and exception handling

Model
- General description
- Object validation
- Lov data structure
- Use of getPopulatedInstance in BaseSupport to get dummy objects and explanation of how use of this rather than getPopulatedInstanceToBeSaved in dao level would result in transient sub objects that would fail integration tests - i.e. use this in unit tests only

Dao

- Rule of having 1 dao for each domain model object
- Basic Spring data setup with BaseDao being parent of all daos
- Location of all resources
	- How resources are copied to right dirs upon build (FileSync Eclipse plugin)
	- Building for different environments
- Use of AllTests to run all related tests
- Use of XXXTxSupport for getting objects from DB in order to initialise objects in test and by passing the Mandatory propagation of Dao level for tests by having Required Tx annotation on the base of these classes
	- Also the use of getPopulatedInstanceToBeSaved in BaseTxSupport to initialise sub objects with actual objects from DB
- Purpose of integration id, its immutability, how immutability provides portability and the fact that it could be same as tech key but it doesn't have to be
